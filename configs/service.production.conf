#!/bin/sh

### BEGIN INIT INFO
# Provides:          dancebooks
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the dancebooks standalone uwsgi app
# Description:       starts dancebooks uwsgi app using start-stop-daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/uwsgi
BASENAME=dancebooks
NAME=dancebooks.production
DESC=dancebooks.production

test -x $DAEMON || exit 0

. /lib/init/vars.sh
. /lib/lsb/init-functions

PIDFILE=/var/run/uwsgi/$BASENAME.production.pid
LOGFILE=/var/log/uwsgi/app/$BASENAME.production.log
INI=/etc/uwsgi/apps-enabled/$BASENAME.production.conf
TOUCH_RELOAD=/var/run/uwsgi/$BASENAME.production.reload

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	start-stop-daemon \
		--start --background \
		--pidfile "$PIDFILE" \
		--exec "$DAEMON" -- \
			--ini "$INI" \
			--daemonize "$LOGFILE" \
			--pidfile "$PIDFILE" \
	|| return 1
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	start-stop-daemon \
		--stop \
		--retry=TERM/10/KILL/5 \
		--pidfile "$PIDFILE" \
		--exec "$DAEMON" -- \
			--ini "$INI" \
			--daemonize "$LOGFILE" \
			--pidfile "$PIDFILE" \

	RETVAL="$?"
	sleep 1
	return "$RETVAL"
}

do_reload()
{
	touch "$TOUCH_RELOAD"
}

case "$1" in
	start)
		log_daemon_msg "Starting $NAME"
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 0 ;;
			2) log_end_msg 1 ;;
		esac
		;;
	stop)
		log_daemon_msg "Stopping $NAME"
		do_stop
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 0 ;;
			2) log_end_msg 1 ;;
		esac
		;;
	reload)
		log_daemon_msg "Reloading $NAME"
		do_reload
		;;
	restart)
		log_daemon_msg "Restarting $NAME"

		do_stop
		case "$?" in
			0|1)
				do_start
				case "$?" in
					0) log_end_msg 0 ;;
					1) log_end_msg 1 ;; # Old process is still running
					*) log_end_msg 1 ;; # Failed to start
				esac
				;;
			*)
				# Failed to stop
				log_end_msg 1
				;;
		esac
		;;
	status)
		status_of_proc -p "$PIDFILE" "$DAEMON" "$NAME" || exit "$?"
		;;
esac

:
