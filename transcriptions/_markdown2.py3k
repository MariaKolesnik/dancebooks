#!/usr/bin/env python3

import markdown2
import codecs
import optparse
import os.path
import sys

dirname = os.path.dirname(__file__)
resetCssFile = open(dirname + "/_reset.css")
styleCssPath = dirname + "/_style.css"

usage = "Usage: %prog [options]"

parser = optparse.OptionParser(usage=usage)
parser.add_option("-i", "--input", dest="inputFilename", help="Read markdown from FILE", metavar="FILE")
parser.add_option("-o", "--output", dest="outputFilename", help="Write xhtml to FILE", metavar="FILE")
parser.add_option("-c", "--css", dest="cssFilename", default=styleCssPath, help="Read css from FILE", metavar="FILE")
(options, args) = parser.parse_args()

if ((options.inputFilename is None) or (not os.path.isfile(options.inputFilename))):
	print("Error: input file is not defined\n")
	sys.exit(1)
	
if (options.outputFilename is None):
	print("Error: output file is not defined\n")
	sys.exit(1)
	
if ((options.cssFilename is None) or (not os.path.isfile(options.cssFilename))):
	print("Error: style file is not defined\n")
	sys.exit(1)

title = os.path.basename(options.inputFilename)
title = os.path.splitext(title)[0]

styleCssFile = open(options.cssFilename)
css = resetCssFile.read() + styleCssFile.read()

with open(options.inputFilename, "r+b") as inputFile:
	markdown = inputFile.read()
	#trimming utf-8 byte order mark
	if markdown.startswith(codecs.BOM_UTF8):
		markdown = markdown[len(codecs.BOM_UTF8):]

html = markdown2.markdown(markdown)
html = """
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
		<title>""" + title + """</title>
		<style type="text/css">
			""" + css + """
		</style>
	</head>
	<body>
		""" + html + """
	</body>
</html>
"""

outputFile = codecs.open(options.outputFilename, "w", encoding="utf-8")
outputFile.write(html)
